name: IssueOps - Member Management

on:
  issues:
    types: 
      - opened
      - edited

# ワークフローが複数起動したら自動キャンセル
concurrency:
  group: ${{ github.workflow }}-${{ github.event.issue.number }}
  cancel-in-progress: true

jobs:
  process-member-request:
    # メンバー管理関連のラベルが付いているIssueのみ処理
    if: |
      contains(github.event.issue.labels.*.name, 'issueops:member-add')
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Add eyes reaction
        run: |
          set -x
          gh api --method POST \
            -f content="eyes" \
            "/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/reactions"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm install
      
      - name: Determine operation type
        id: determine_op
        run: |
          if echo '${{ toJson(github.event.issue.labels.*.name) }}' | jq -r '.[]' | grep -q 'issueops:member-add'; then
            echo "operation=add" >> $GITHUB_OUTPUT
            echo "operation_label=メンバー追加" >> $GITHUB_OUTPUT
          else
            echo "operation=unknown" >> $GITHUB_OUTPUT
          fi
          
      - name: Parse Issue
        id: parser
        uses: issue-ops/parser@v4.2.0
        with:
          body: ${{ github.event.issue.body }}
          issue-form-template: member-add.yml

      - name: Validate Issue
        id: validator
        uses: issue-ops/validator@v3.3.0
        with:
          issue-form-template: member-add.yml
          parsed-issue-body: ${{ steps.parser.outputs.json }}
          workspace: ${{ github.workspace }}
          
      - name: Remove existing status labels
        uses: issue-ops/labeler@v3.0.0
        with:
          action: remove
          issue_number: ${{ github.event.issue.number }}
          label_patterns: |
            status:*

      - name: Add status:pending label
        if: steps.validator.outputs.result == 'success'
        uses: issue-ops/labeler@v3.0.0
        with:
          action: add
          issue_number: ${{ github.event.issue.number }}
          labels: |
            status:pending

      - name: Add status:failed label
        if: steps.validator.outputs.result == 'failure'
        uses: issue-ops/labeler@v3.0.0
        with:
          action: add
          issue_number: ${{ github.event.issue.number }}
          labels: |
            status:failed

      - name: Output Issue content
        if: steps.validator.outputs.result == 'success'
        id: output-issue
        run: |
          echo '${{ steps.parser.outputs.json }}'
          echo "github_username = ${{ steps.parser.outputs.parsed_github_username }}"
          echo "email = ${{ steps.parser.outputs.parsed_email }}"
          echo "role = ${{ steps.parser.outputs.parsed_role }}"
          echo "teams = ${{ steps.parser.outputs.parsed_teams }}"

